% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_manipulation.R
\name{get_uuid}
\alias{get_uuid}
\title{Generate a vector of Version 4 UUIDs (RFC 4122)}
\usage{
get_uuid(n = 1L)
}
\arguments{
\item{n}{Number of UUIDs to generate}
}
\description{
This function is being deprecated in favor of directly using
  the \code{UUIDgenerate()} function from Simon Urbanek's \code{uuid} package. The updated
  \code{UUIDgenerate()} function now generates vectors of proper version 4 random
  UUIDs in a Windows environment. The previous version of the \code{get_uuid()}
  relied on the \code{dplR::uuid_gen()} function, This has now been replaced by
  \code{uuid::UUIDgenerate()}. The current version of \code{get_uuid()} can
  be used as a drop-in replacement for the previous verison, but it is
  orders of magnitude faster. It is retained here strictly to avoid introducing
  any breaking changes in existing code. For any new code, please use \code{UUIDgenerate()}.
}
\examples{
# Create example data frame
library(dplyr)
dat = tibble::tibble(survey_date = c("2019-05-10",
                                    "2019-05-12",
                                    "2019-05-14"),
                    species = c("chinook",
                                "chum",
                                "pink"),
                    fish_count = c(3, 5, 25))

# One UUID per row
dat = dat \%>\%
  mutate(survey_id = remisc::get_uuid(n = nrow(dat))) \%>\%
  select(survey_id, survey_date, species, fish_count)

# Create example data frame
library(dplyr)
dat = tibble::tibble(survey_date = c("2019-05-10",
                                    "2019-05-10",
                                    "2019-05-14",
                                    "2019-05-14",
                                    "2019-05-18"),
                    species = c("chinook",
                                "chinook",
                                "coho",
                                "chum",
                                "pink"),
                    fish_count = c(3, 5, 8, 6, 25))

# One UUID per group
dat = dat \%>\%
  group_by(survey_date) \%>\%
  mutate(survey_id = remisc::get_uuid()) \%>\%
  ungroup() \%>\%
  select(survey_id, survey_date, species, fish_count)

}
