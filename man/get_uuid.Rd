% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_manipulation.R
\name{get_uuid}
\alias{get_uuid}
\title{Generate a vector of Version 4 UUIDs (RFC 4122)}
\usage{
get_uuid(n = 1L)
}
\arguments{
\item{n}{Number of UUIDs to generate}
}
\description{
Generates a vector of Version 4 (RFC 4122) UUIDs. This
  function can be used to generate a vector of random UUID keys prior to
  uploading a set of data to a database table that uses UUIDs as primary
  or foreign keys. The uuid.gen function was written by Mikko Korpela
  and borrowed from the dplR package. It is included here only because
  the dplR package generated a warning "Registered S3 method overwritten
  by 'R.oo'" when the package was loading.
}
\examples{
\dontrun{
# Create example data frame
dat = tibble::tibble(survey_date = c("2019-05-10",
                                    "2019-05-12",
                                    "2019-05-14"),
                    species = c("chinook",
                                "chum",
                                "pink"),
                    fish_count = c(3, 5, 25))

# One UUID per row
dat = dat \%>\%
  mutate(survey_id = get_uuid(n = nrow(dat))) \%>\%
  select(survey_id, survey_date, species, fish_count)

# Create example data frame
dat = tibble::tibble(survey_date = c("2019-05-10",
                                    "2019-05-10",
                                    "2019-05-14",
                                    "2019-05-14",
                                    "2019-05-18"),
                    species = c("chinook",
                                "chinook",
                                "coho",
                                "chum",
                                "pink"),
                    fish_count = c(3, 5, 8, 6, 25))

# One UUID per group
dat = dat \%>\%
  group_by(survey_date) \%>\%
  mutate(survey_id = get_uuid()) \%>\%
  ungroup() \%>\%
  select(survey_id, survey_date, species, fish_count)
}

}
